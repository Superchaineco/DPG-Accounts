type EIP712DomainChanged @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnerAdded @entity(immutable: true) {
  id: Bytes!
  safe: Bytes! # address
  newOwner: Bytes! # address
  superChainId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  superChainSmartAccount: SuperChainSmartAccount!

}

type OwnerPopulated @entity {
  id: Bytes!
  safe: Bytes! # address
  newOwner: Bytes! # address
  superChainId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  superChainSmartAccount: SuperChainSmartAccount!

}

type OwnerPopulationRemoved @entity(immutable: true) {
  id: Bytes!
  safe: Bytes! # address
  owner: Bytes! # address
  superChainId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  superChainSmartAccount: SuperChainSmartAccount!

}

type PointsIncremented @entity(immutable: true) {
  id: Bytes!
  recipient: Bytes! # address
  points: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  superChainSmartAccount: SuperChainSmartAccount!

}

type SuperChainSmartAccount @entity(immutable: true) {
  id: Bytes!
  safe: Bytes! # address
  initialOwner: Bytes! # address
  superChainId: String! # string
  noun_background: BigInt! # uint48
  noun_body: BigInt! # uint48
  noun_accessory: BigInt! # uint48
  noun_head: BigInt! # uint48
  noun_glasses: BigInt! # uint48
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}


type BadgeTier @entity {
  id: Bytes!
  points: BigInt!
  tier: BigInt! @orderBy(direction: asc)
  badge: Badge! # Relación con Badge
  uri: String! # string
}

type Badge @entity {
  id: String!
  badgeId: BigInt!
  uri: String!
  badgeTiers: [BadgeTier!]! @derivedFrom(field: "badge") @orderBy(direction: asc) 
}

type AccountBadge @entity {
  id: Bytes!
  user: Bytes! # address
  badge: Badge! # Relación con Badge
  tier: BigInt!
  points: BigInt! # uint256
}